// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.DbContext.Mappings
{

    // Address
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class AddressConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Entities.AddressModel>
    {
        public AddressConfiguration()
            : this("dbo")
        {
        }

        public AddressConfiguration(string schema)
        {
            ToTable("Addresses", schema);
            HasKey(x => x.ClientId);

            Property(x => x.ClientId).HasColumnName(@"ClientID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Country).HasColumnName(@"Country").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Address_).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);

            // Foreign keys
            HasRequired(a => a.ClientModel).WithOptional(b => b.AddressModel).WillCascadeOnDelete(false); // FK_ClientAddress
        }
    }

}
// </auto-generated>
