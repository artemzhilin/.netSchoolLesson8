// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.DbContext.Mappings
{

    // Cards
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class CardConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Entities.CardModel>
    {
        public CardConfiguration()
            : this("dbo")
        {
        }

        public CardConfiguration(string schema)
        {
            ToTable("Cards", schema);
            HasKey(x => x.CardId);

            Property(x => x.CardId).HasColumnName(@"CardID").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(16).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ClientId).HasColumnName(@"ClientID").HasColumnType("int").IsRequired();
            Property(x => x.PinCode).HasColumnName(@"PinCode").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Balance).HasColumnName(@"Balance").HasColumnType("money").IsRequired().HasPrecision(19,4);

            // Foreign keys
            HasRequired(a => a.ClientModel).WithMany(b => b.Cards).HasForeignKey(c => c.ClientId).WillCascadeOnDelete(false); // FK_ClientCard
        }
    }

}
// </auto-generated>
