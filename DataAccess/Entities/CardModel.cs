// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.Entities
{

    // Cards
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class CardModel
    {
        public string CardId { get; set; } // CardID (Primary key) (length: 16)
        public int ClientId { get; set; } // ClientID
        public string PinCode { get; set; } // PinCode (length: 4)
        public decimal Balance { get; set; } // Balance

        // Reverse navigation

        /// <summary>
        /// Child Operations where [Operations].[InID] point to this entity (FK_InCard)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<OperationModel> Operations_In { get; set; } // Operations.FK_InCard
        /// <summary>
        /// Child Operations where [Operations].[OutID] point to this entity (FK_OutCard)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<OperationModel> Operations_Out { get; set; } // Operations.FK_OutCard

        // Foreign keys

        /// <summary>
        /// Parent Client pointed by [Cards].([ClientId]) (FK_ClientCard)
        /// </summary>
        public virtual ClientModel ClientModel { get; set; } // FK_ClientCard

        public CardModel()
        {
            Operations_Out = new System.Collections.Generic.List<OperationModel>();
            Operations_In = new System.Collections.Generic.List<OperationModel>();
        }

        public override string ToString()
        {
            return new {
                Card = CardId,
                Balance = Balance
            }.ToString();
        }
    }

}
// </auto-generated>
